{"ast":null,"code":"import { FETCH_WEATHER_REQUEST, FETCH_WEATHER_SUCCESS, FETCH_WEATHER_FAILURE } from './weatherTypes';\nconst initialState = {\n  loading: false,\n  weather: undefined,\n  error: undefined\n};\n\nconst weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_WEATHER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_WEATHER_SUCCESS:\n      return { ...state,\n        loading: false,\n        weather: action.payload,\n        error: undefined\n      };\n\n    case FETCH_WEATHER_FAILURE:\n      return { ...state,\n        loading: false,\n        weather: undefined,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default weatherReducer;","map":{"version":3,"sources":["/Users/Ivan/Documents/GitHub/Weather-App-React/weather-app/src/redux/weather/weatherReducer.js"],"names":["FETCH_WEATHER_REQUEST","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","initialState","loading","weather","undefined","error","weatherReducer","state","action","type","payload"],"mappings":"AAAA,SACEA,qBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,gBAJP;AAOA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,OAAO,EAAE,KADO;AAEhBC,EAAAA,OAAO,EAAEC,SAFO;AAGhBC,EAAAA,KAAK,EAAED;AAHS,CAApB;;AAMA,MAAME,cAAc,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACvD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,qBAAL;AAA4B,aAAM,EAChC,GAAGS,KAD6B;AAEhCL,QAAAA,OAAO,EAAE;AAFuB,OAAN;;AAI5B,SAAKH,qBAAL;AAA4B,aAAM,EAChC,GAAGQ,KAD6B;AAEhCL,QAAAA,OAAO,EAAE,KAFuB;AAGhCC,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAHgB;AAIhCL,QAAAA,KAAK,EAAED;AAJyB,OAAN;;AAM5B,SAAKJ,qBAAL;AAA4B,aAAO,EACjC,GAAGO,KAD8B;AAEjCL,QAAAA,OAAO,EAAE,KAFwB;AAGjCC,QAAAA,OAAO,EAAEC,SAHwB;AAIjCC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAJmB,OAAP;;AAM5B;AAAS,aAAOH,KAAP;AAjBX;AAmBD,CApBD;;AAsBA,eAAeD,cAAf","sourcesContent":["import {\n  FETCH_WEATHER_REQUEST,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE\n} from './weatherTypes';\n\n\nconst initialState ={\n    loading: false,\n    weather: undefined,\n    error: undefined\n}\n\nconst weatherReducer = (state = initialState, action) => {\n  switch(action.type){\n    case FETCH_WEATHER_REQUEST: return{\n      ...state,\n      loading: true\n    };\n    case FETCH_WEATHER_SUCCESS: return{\n      ...state,\n      loading: false,\n      weather: action.payload,\n      error: undefined\n    };\n    case FETCH_WEATHER_FAILURE: return {\n      ...state,\n      loading: false,\n      weather: undefined,\n      error: action.payload,\n    };\n    default: return state\n  }\n}\n\nexport default weatherReducer;"]},"metadata":{},"sourceType":"module"}