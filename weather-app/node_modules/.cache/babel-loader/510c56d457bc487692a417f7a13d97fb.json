{"ast":null,"code":"var _jsxFileName = \"/Users/Ivan/Documents/GitHub/Weather-App-React/weather-app/src/components/WeatherSearchAndShow/WeatherSearchAndShow.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchWeather } from '../../redux/weather/weatherActions';\nimport { getWeatherSelector } from '../../selectors';\nimport { connect } from 'react-redux';\nimport ShowWeather from './ShowWeather';\nimport SearchWeatherForm from './SearchWeatherForm';\n\nconst WeatherSearchAndShow = ({\n  weatherInfo,\n  getWeather\n}) => {\n  const [weather, setWeather] = useState({\n    city: undefined,\n    country: undefined,\n    temp: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: \"\"\n  });\n  useEffect(() => {\n    if (weatherInfo.weather) {\n      setWeather({\n        city: weatherInfo.weather.data.city.name,\n        country: weatherInfo.weather.data.city.country,\n        temp: weatherInfo.weather.data.list[0].main.temp,\n        humidity: weatherInfo.weather.data.list[0].main.humidity,\n        description: weatherInfo.weather.data.list[0].weather[0].description,\n        error: \"\"\n      });\n    }\n  }, [weatherInfo.weather]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchWeatherForm, {\n    getWeather: getWeather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ShowWeather, {\n    checkFetching: weatherInfo.weather,\n    weather: weather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    weatherInfo: getWeatherSelector(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getWeather: e => dispatch(fetchWeather(e))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherSearchAndShow);","map":{"version":3,"sources":["/Users/Ivan/Documents/GitHub/Weather-App-React/weather-app/src/components/WeatherSearchAndShow/WeatherSearchAndShow.js"],"names":["React","useState","useEffect","fetchWeather","getWeatherSelector","connect","ShowWeather","SearchWeatherForm","WeatherSearchAndShow","weatherInfo","getWeather","weather","setWeather","city","undefined","country","temp","humidity","description","error","data","name","list","main","mapStateToProps","state","mapDispatchToProps","dispatch","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,YAAR,QAA4B,oCAA5B;AACA,SAAQC,kBAAR,QAAiC,iBAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AAC1D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC;AACrCY,IAAAA,IAAI,EAAEC,SAD+B;AAErCC,IAAAA,OAAO,EAAED,SAF4B;AAGrCE,IAAAA,IAAI,EAAEF,SAH+B;AAIrCG,IAAAA,QAAQ,EAAEH,SAJ2B;AAKrCI,IAAAA,WAAW,EAAEJ,SALwB;AAMrCK,IAAAA,KAAK,EAAE;AAN8B,GAAD,CAAtC;AASAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGO,WAAW,CAACE,OAAf,EAAuB;AACvBC,MAAAA,UAAU,CAAC;AACTC,QAAAA,IAAI,EAAEJ,WAAW,CAACE,OAAZ,CAAoBS,IAApB,CAAyBP,IAAzB,CAA8BQ,IAD3B;AAETN,QAAAA,OAAO,EAAEN,WAAW,CAACE,OAAZ,CAAoBS,IAApB,CAAyBP,IAAzB,CAA8BE,OAF9B;AAGTC,QAAAA,IAAI,EAAEP,WAAW,CAACE,OAAZ,CAAoBS,IAApB,CAAyBE,IAAzB,CAA8B,CAA9B,EAAiCC,IAAjC,CAAsCP,IAHnC;AAITC,QAAAA,QAAQ,EAAER,WAAW,CAACE,OAAZ,CAAoBS,IAApB,CAAyBE,IAAzB,CAA8B,CAA9B,EAAiCC,IAAjC,CAAsCN,QAJvC;AAKTC,QAAAA,WAAW,EAAET,WAAW,CAACE,OAAZ,CAAoBS,IAApB,CAAyBE,IAAzB,CAA8B,CAA9B,EAAiCX,OAAjC,CAAyC,CAAzC,EAA4CO,WALhD;AAMTC,QAAAA,KAAK,EAAE;AANE,OAAD,CAAV;AAQD;AACF,GAXU,EAWR,CAACV,WAAW,CAACE,OAAb,CAXQ,CAAT;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,UAAU,EAAED,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,aAAa,EAAED,WAAW,CAACE,OAAxC;AAAiD,IAAA,OAAO,EAAEA,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA7BD;;AA+BA,MAAMa,eAAe,GAAIC,KAAD,IAAU;AAChC,SAAM;AACJhB,IAAAA,WAAW,EAAEL,kBAAkB,CAACqB,KAAD;AAD3B,GAAN;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,UAAU,EAAGkB,CAAD,IAAOD,QAAQ,CAACxB,YAAY,CAACyB,CAAD,CAAb;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAevB,OAAO,CACpBmB,eADoB,EAEpBE,kBAFoB,CAAP,CAGblB,oBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {fetchWeather } from '../../redux/weather/weatherActions';\nimport {getWeatherSelector} from '../../selectors';\nimport {connect} from 'react-redux';\n\nimport ShowWeather from './ShowWeather';\nimport SearchWeatherForm from './SearchWeatherForm'\n\nconst WeatherSearchAndShow = ({weatherInfo, getWeather}) => {\n  const [weather, setWeather ]= useState({\n    city: undefined,\n    country: undefined,\n    temp: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: \"\"\n  })\n  \n  useEffect(() => {\n    if(weatherInfo.weather){\n    setWeather({\n      city: weatherInfo.weather.data.city.name,\n      country: weatherInfo.weather.data.city.country,\n      temp: weatherInfo.weather.data.list[0].main.temp,\n      humidity: weatherInfo.weather.data.list[0].main.humidity,\n      description: weatherInfo.weather.data.list[0].weather[0].description,\n      error: \"\"\n    });\n  }\n}, [weatherInfo.weather])\n\n  return (\n    <div>\n      <SearchWeatherForm getWeather={getWeather} />\n      <ShowWeather checkFetching={weatherInfo.weather} weather={weather} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) =>{\n  return{\n    weatherInfo: getWeatherSelector(state)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return { \n    getWeather: (e) => dispatch(fetchWeather(e))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WeatherSearchAndShow);"]},"metadata":{},"sourceType":"module"}