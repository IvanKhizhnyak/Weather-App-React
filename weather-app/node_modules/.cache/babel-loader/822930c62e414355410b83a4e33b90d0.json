{"ast":null,"code":"import _objectSpread from\"/Users/Ivan/Documents/GitHub/Weather-App-React/weather-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{FETCH_WEATHER_REQUEST,FETCH_WEATHER_SUCCESS,FETCH_WEATHER_FAILURE}from'./weatherTypes';var initialState={loading:false,weather:undefined,error:undefined};var weatherReducer=function weatherReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_WEATHER_REQUEST:return _objectSpread({},state,{loading:true});case FETCH_WEATHER_SUCCESS:return _objectSpread({},state,{loading:false,weather:action.payload,error:undefined});case FETCH_WEATHER_FAILURE:return _objectSpread({},state,{loading:false,weather:undefined,error:action.payload});default:return state;}};export default weatherReducer;","map":{"version":3,"sources":["/Users/Ivan/Documents/GitHub/Weather-App-React/weather-app/src/redux/weather/weatherReducer.js"],"names":["FETCH_WEATHER_REQUEST","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","initialState","loading","weather","undefined","error","weatherReducer","state","action","type","payload"],"mappings":"4IAAA,OACEA,qBADF,CAEEC,qBAFF,CAGEC,qBAHF,KAIO,gBAJP,CAOA,GAAMC,CAAAA,YAAY,CAAE,CAChBC,OAAO,CAAE,KADO,CAEhBC,OAAO,CAAEC,SAFO,CAGhBC,KAAK,CAAED,SAHS,CAApB,CAMA,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBN,YAAyB,IAAXO,CAAAA,MAAW,2CACvD,OAAOA,MAAM,CAACC,IAAd,EACE,IAAKX,CAAAA,qBAAL,CAA4B,wBACvBS,KADuB,EAE1BL,OAAO,CAAE,IAFiB,GAI5B,IAAKH,CAAAA,qBAAL,CAA4B,wBACvBQ,KADuB,EAE1BL,OAAO,CAAE,KAFiB,CAG1BC,OAAO,CAAEK,MAAM,CAACE,OAHU,CAI1BL,KAAK,CAAED,SAJmB,GAM5B,IAAKJ,CAAAA,qBAAL,CAA4B,wBACvBO,KADuB,EAE1BL,OAAO,CAAE,KAFiB,CAG1BC,OAAO,CAAEC,SAHiB,CAI1BC,KAAK,CAAEG,MAAM,CAACE,OAJY,GAM5B,QAAS,MAAOH,CAAAA,KAAP,CAjBX,CAmBD,CApBD,CAsBA,cAAeD,CAAAA,cAAf","sourcesContent":["import {\n  FETCH_WEATHER_REQUEST,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE\n} from './weatherTypes';\n\n\nconst initialState ={\n    loading: false,\n    weather: undefined,\n    error: undefined\n}\n\nconst weatherReducer = (state = initialState, action) => {\n  switch(action.type){\n    case FETCH_WEATHER_REQUEST: return{\n      ...state,\n      loading: true\n    };\n    case FETCH_WEATHER_SUCCESS: return{\n      ...state,\n      loading: false,\n      weather: action.payload,\n      error: undefined\n    };\n    case FETCH_WEATHER_FAILURE: return {\n      ...state,\n      loading: false,\n      weather: undefined,\n      error: action.payload,\n    };\n    default: return state\n  }\n}\n\nexport default weatherReducer;"]},"metadata":{},"sourceType":"module"}